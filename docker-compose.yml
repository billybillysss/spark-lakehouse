services:
  minio:
    image: "minio/minio:latest"
    volumes:
      - ./minio/s3:/data
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":9001"
    networks:
      - shared_network

  master:
    build: spark/.
    environment:
      - SPARK_ROLE=master
      - S3A_ACCESS_KEY=${S3A_ACCESS_KEY}
      - S3A_SECRET_KEY=${S3A_SECRET_KEY}
      - SPARK_CONF_DIR=/opt/spark/conf
    volumes:
      - ./spark/conf/spark-defaults.conf:/opt/spark/conf/spark-defaults.conf
      - ./spark/conf/livy.conf:/opt/livy/conf/livy.conf
      # - ./spark/conf/spark-blacklist.conf:/opt/livy/spark-blacklist.conf
      - ./spark/conf/hive-site.xml:/opt/spark/conf/hive-site.xml
    ports:
      - 4040:4040
      - 7077:7077
      - 8080:8080
      - 18080:18080
      - 8998:8998
      - 15002:15002
    networks:
      - shared_network
  worker:
    build: spark/.
    restart: unless-stopped
    ports:
      - "8081:8081"
    volumes:
      - ./spark/conf/spark-defaults.conf:/opt/spark/conf/spark-defaults.conf
      - ./spark/conf/hive-site.xml:/opt/spark/conf/hive-site.xml
      
    environment:
      - SPARK_ROLE=worker
      - SPARK_MASTER_HOST=spark-master
      - SPARK_WORKER_MEMORY=5G
      - SPARK_WORKER_CORES=2
      - S3A_ACCESS_KEY=${S3A_ACCESS_KEY}
      - S3A_SECRET_KEY=${S3A_SECRET_KEY}
      - SPARK_CONF_DIR=/opt/spark/conf
    depends_on:
        - master
    networks:
      - shared_network

  thriftserver:
    build: spark/.
    restart: always
    environment:
      - SPARK_ROLE=thriftserver
    depends_on:
      - master
      - metastore
    ports:
      - "4041:4040"
      - "10000:10000"
    # command: "bash -c /opt/spark/sbin/start-thriftserver.sh && tail -f /dev/null"
    volumes:
      - ./spark/conf/spark-defaults.conf:/opt/spark/conf/spark-defaults.conf
      - ./spark/conf/hive-site.xml:/opt/spark/conf/hive-site.xml
    networks:
      - shared_network
    
  postgres:
    image: postgres:10-alpine
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: metastore_db
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d metastore_db"]
      interval: 1s
      timeout: 10s
      retries: 10
    networks:
      - shared_network
  metastore:
    build: metastore/.
    ports:
      - 9083:9083
    environment:
      SERVICE_NAME: metastore
      DB_DRIVER: postgres
      HIVE_CUSTOM_CONF_DIR: /opt/hive/conf
    volumes:
      - ./metastore/conf:/opt/hive/conf
    depends_on:
      postgres:
          condition: service_healthy
    networks:
      - shared_network
  # kyuubi:
  #   build: kyuubi/.
  #   volumes:
  #     - ./kyuubi/conf/kyuubi-defaults.conf:/opt/kyuubi/conf/kyuubi-defaults.conf
  #   ports:
  #     - "10009:10009"
  #     - "10099:10099"
  #   depends_on:
  #     - master
  #   networks:
  #     - shared_network
networks:
  shared_network:
    external: true